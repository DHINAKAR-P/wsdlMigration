buildscript {
	ext {
		springBootVersion = '1.5.2.RELEASE'
	}
	repositories {
		mavenCentral()
	}
	dependencies {
		classpath("org.springframework.boot:spring-boot-gradle-plugin:${springBootVersion}")
	}
}

apply plugin: 'java'
apply plugin: 'eclipse'
apply plugin: 'org.springframework.boot'

version = '0.0.1-SNAPSHOT'
sourceCompatibility = 1.8

repositories {
	mavenCentral()
}


dependencies {
 compile 'org.springframework:spring-support:2.0.8'
  compile 'org.springframework:spring-aop:4.1.2.RELEASE'
  compile 'org.springframework:spring-beans:4.1.2.RELEASE'
  compile 'org.springframework:spring-context:4.1.2.RELEASE'
  compile 'org.springframework:spring-core:4.1.2.RELEASE'
  compile 'com.squareup.okio:okio:1.11.0'
  compile 'com.squareup.okhttp3:okhttp:3.6.0'
  compile 'org.json:json:20160810'
  compile 'mysql:mysql-connector-java:5.1.38'
  compile 'org.apache.commons:commons-dbcp2:2.0.1'
  compile group: 'org.hibernate.javax.persistence', name: 'hibernate-jpa-2.0-api', version: '1.0.1.Final'
  compile group: 'log4j', name: 'log4j', version: '1.2.17'
  compile('org.springframework.boot:spring-boot-starter-jdbc')
	compile group: 'com.predic8', name: 'soa-model-core', version: '1.5.4'
	
	// https://mvnrepository.com/artifact/wsdl4j/wsdl4j
	compile group: 'wsdl4j', name: 'wsdl4j', version: '1.6.2'


	// https://mvnrepository.com/artifact/org.reflections/reflections
compile group: 'org.reflections', name: 'reflections', version: '0.9.5-RC2'
	
  //println "In Paretnt ___________________------------------ > "+customProp



	//runtime files('mydata/'+customProp+'.jar')
	//compile files(customProp+'.jar')
/*
task propertyJar(type: Jar) {
 archiveName = customProp+".jar"
 println "My Name IS Jhon Cena-- > and  cant See Me..!! - > "+customProp
 from(customProp+'/build/classes') {
    include 'com/methods/**'
 }
dependencies {
	println "HHH And Shan Micheals - > "+customProp
   // compile fileTree(dir: 'libs', include: customProp+'.jar')
   classpath = files("lib/"+customProp+".jar")
}


}*/


/*
//version = '0.0.1-SNAPSHOT'
sourceCompatibility = 1.8
bootRepackage {
    enabled = false
}
sourceSets {
	compile fileTree(dir:'C://Users//10Decoders//Downloads//axis2-1.7.4-bin//axis2-1.7.4//lib',include: '*.jar')
    preBuildSources
    main {
        java {
            srcDirs = [customProp]
              println "  ORIGINAL--  -- > "+output.classesDir
              println name
        }
         // compileClasspath += preBuildSources.output
       // runtimeClasspath += preBuildSources.output

    }
}

// Various ways to access the main source set


jar {
//	println "My Name IS Jhon Cena-- > and  cant See Me..!! - > "+customProp;
  archiveName = customProp+'.jar'
  destinationDir = projectDir
  dependencies {
	println "HHH And Shan Micheals - > "
   // compile fileTree(dir: 'libs', include: customProp+'.jar')
   //classpath = files("lib/"+customProp+".jar")
  //classpath = sourceSets.main.output + sourceSets.main.compileClasspath
  // from sourceSets.main.runtimeClasspath
}
task buildnext(dependsOn:build){
	println "My Name IS Jhon Cena-- > and  cant See Me..!! - > ---- "+sourceSets.main.runtimeClasspath
//classpath = sourceSets.main.runtimeClasspath
   //from sourceSets.main.runtimeClasspath
}

   
}
*/

/*task propertyJar(type: Test,dependsOn : build) <<{
println "My Name IS Jhon Cena-- > and  cant See Me..!! - > ";
 compileClasspath += preBuildSources.output
        runtimeClasspath += preBuildSources.output

}*/



}


jar {
  archiveName = 'batch.jar'
  destinationDir = projectDir
  manifest {
    attributes (
        'Main-Class': 'com.wsdl.migration.SpringWsdlFieldIdentification',
        //'Class-Path': configurations.compile.collect { 'mydata/' + it.getName() }.join(' '),
       // 'Class-Path': 'blzservice.jar'        
        'Class-Path': 'testAPP.jar'
    )
  }
}

task copyLibs(type: Copy){
  println "buildDir- > "+buildDir
 /* into buildDir
  from 'mydata/testAPP.jar'*/
}

/*task copyLibs(type: Copy){
  into "mydata"
  from configurations.runtime
}*/
build.dependsOn copyLibs
